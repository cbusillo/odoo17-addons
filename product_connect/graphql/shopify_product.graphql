fragment ProductFragment on Product {
    id
    title
    description
    productType
    status
    updatedAt
    createdAt
    vendor
    handle
    publishedAt
}

fragment MeasurementFragment on InventoryItemMeasurement {
    id
    weight {
        unit
        value
    }
}

fragment InventoryLevelFragment on InventoryLevel {
    id
    location {
        id
        name
    }
    quantities(names: $quantityNames) {
        id
        quantity
        updatedAt
    }

}

fragment InventoryItemFragment on InventoryItem {
    id
    inventoryLevel (locationId: $locationId) {
        ...InventoryLevelFragment
    }
    measurement {
        ...MeasurementFragment
    }
}

fragment VariantFragment on ProductVariant {
    id
    sku
    price
    inventoryQuantity
    barcode
    inventoryItem {
        ...InventoryItemFragment

    }
}

fragment MetafieldFragment on Metafield {
    id
    key
    value
}

fragment ImageFragment on Image {
    id
    url
}

query GetProduct($id: ID!, $quantityNames: [String!]!, $locationId: ID!) {
    product(id: $id) {
        ...ProductFragment
        variants(first:1) { edges { node { ...VariantFragment } } }
        images(first: 20) { edges { node { ...ImageFragment } } }
        metafields(first: 15, namespace: "odoo") { edges { node { ...MetafieldFragment } } }
    }
}

query GetProducts($first: Int!, $after: String, $query: String, $quantityNames: [String!]!, $locationId: ID!) {
    products(first: $first, after: $after, query: $query) {
        pageInfo {
            hasNextPage
            endCursor
        }
        edges {
            node {
                ...ProductFragment
                variants(first:1) { edges { node { ...VariantFragment } } }
                images(first: 20) { edges { node { ...ImageFragment } } }
                metafields(first: 15, namespace: "odoo") { edges { node { ...MetafieldFragment } } }

            }
        }
    }
}

query GetLocations {
    locations(first: 5) {
        edges {
            node {
                id
            }
        }
    }
}